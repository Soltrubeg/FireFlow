plugins {
    id 'java'
    id 'io.papermc.paperweight.userdev' version "2.0.0-beta.17"
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id("com.gradleup.shadow") version "8.3.6"
}

group = 'de.blazemcworld'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = "fawe-repo"
        url = uri("https://maven.enginehub.org/repo/")
    }
}


dependencies {
    paperweight.paperDevBundle("1.21.8-R0.1-SNAPSHOT")
    implementation 'me.xdrop:fuzzywuzzy:1.4.0'

    compileOnly 'net.luckperms:api:5.4'
    compileOnly 'com.sk89q.worldedit:worldedit-core:7.4.0-SNAPSHOT'
    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:7.4.0-SNAPSHOT'

    implementation 'org.eclipse.jetty.websocket:jetty-websocket-core-common:12.0.21'
    implementation 'org.eclipse.jetty.websocket:jetty-websocket-core-server:12.0.21'
    implementation 'org.eclipse.jetty.websocket:jetty-websocket-jetty-api:12.0.21'
    implementation 'org.eclipse.jetty.websocket:jetty-websocket-jetty-common:12.0.21'
    implementation 'org.eclipse.jetty.websocket:jetty-websocket-jetty-server:12.0.21'
    implementation 'org.eclipse.jetty:jetty-util:12.0.21'
    implementation 'org.eclipse.jetty:jetty-server:12.0.21'
    implementation 'org.eclipse.jetty:jetty-io:12.0.21'
    implementation 'org.eclipse.jetty:jetty-http:12.0.21'
}

tasks.assemble {
    dependsOn(tasks.reobfJar)
}

tasks {
    runServer {
        minecraftVersion("1.21.8")
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks.withType(xyz.jpenilla.runtask.task.AbstractRun) {
    javaLauncher = javaToolchains.launcherFor {
        vendor = JvmVendorSpec.JETBRAINS
        languageVersion = JavaLanguageVersion.of(21)
    }
    jvmArgs("-XX:+AllowEnhancedClassRedefinition")
}
